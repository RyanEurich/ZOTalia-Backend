from pydantic import BaseModel, field_serializer, field_validator
from uuid import UUID
from datetime import datetime
from typing import Optional
from enum import Enum

class ApplicationStatus(str, Enum):
    in_progress = "in_progress"
    completed = "completed"
    #might need to change later

class BaseApplicationSchema(BaseModel):
    application_id: Optional[UUID] = None 
    created_at: datetime = None
    status: ApplicationStatus = None
    submitted_at: datetime = None #when the application was submitted
    updated_at: datetime = None #any general updates including a submission
    got_hired: bool = False #if the employer wishes to hire the applicant
    has_been_viewed:bool = False #if the employer has viewed the application
    has_accepted_hire_offer:bool  = False #if the applicant has accepted the hire offer
    gig_id: UUID = None
    worker_id: UUID = None

    @field_serializer('application_id')
    def serialize_application_id(self, application_id: UUID) -> str:
        return str(application_id)
    
    @field_serializer('created_at')
    def serialize_created_at(self, created_at: datetime) -> str:
        return created_at.isoformat()
    
    @field_serializer('submitted_at')
    def serialize_submitted_at(self, submitted_at: datetime) -> str:
        return submitted_at.isoformat()
    
    @field_serializer('updated_at')
    def serialize_updated_at(self, updated_at: datetime) -> str:
        return updated_at.isoformat()
    
    @field_serializer('gig_id')
    def serialize_gig_id(self, gig_id: UUID) -> str:
        return str(gig_id)
    
    @field_serializer('worker_id')
    def serialize_worker_id(self, worker_id: UUID) -> str:
        return str(worker_id)
    

class CreateApplicationSchema(BaseApplicationSchema):
    #application_id is auto generated by supabase
    pass

class UpdateApplicationSchema(BaseApplicationSchema):
    application_id: UUID = None

    @field_serializer('application_id')
    def serialize_application_id(self, application_id: UUID) -> str:
        return str(application_id)
    
class ResponseApplicationSchema(BaseApplicationSchema):
    application_id: UUID = None

    @field_serializer('application_id')
    def serialize_application_id(self, application_id: UUID) -> str:
        return str(application_id)

